name: 'Terraform Remote Backend Setup'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform-backend-setup/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'terraform-backend-setup/**'

env:
  AWS_REGION: "eu-north-1"
  TF_BACKEND_S3_BUCKET: "your-unique-terraform-state-bucket" # Must be globally unique
  TF_BACKEND_DYNAMODB_TABLE: "terraform-state-locks"

jobs:
  terraform:
    name: 'Terraform Plan & Apply'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.1"
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform-backend-setup

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ./terraform-backend-setup

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./terraform-backend-setup

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="s3_bucket_name=${{ env.TF_BACKEND_S3_BUCKET }}" \
            -var="dynamodb_table_name=${{ env.TF_BACKEND_DYNAMODB_TABLE }}" \
            -out=tfplan
        working-directory: ./terraform-backend-setup

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform-backend-setup
